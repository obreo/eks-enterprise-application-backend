name: docker-image

on:
  push:
    branches:
      - prod
      - staging
      - dev
  workflow_dispatch:

# Required to connect to AWS ECR through OIDC
permissions:
  id-token: write
  contents: read

jobs:
  DEV:
    name: Build docker image and push to ECR
    if: github.ref_name == 'dev'
    runs-on: ubuntu-latest
    environment: DEV
    env:
      IMAGE_TAG: ${{vars.LABEL}}-${GITHUB_SHA::7}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build Docker image
        run: |
          docker build -t ${{ vars.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }} .

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ vars.AWS_REGION }}
          role-to-assume: ${{ vars.OIDC_ROLE_ARN }}
          
      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ vars.AWS_REGION }} | docker login --username AWS --password-stdin ${{ vars.AWS_ACCOUNT }}.dkr.ecr.${{ vars.AWS_REGION }}.amazonaws.com
          docker push ${{ vars.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}

  STAGING:
    name: Build docker image and push to ECR
    if: github.ref_name == 'staging'
    runs-on: ubuntu-latest
    environment: STAGING
    env:
      IMAGE_TAG: ${{vars.LABEL}}-${GITHUB_SHA::7}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build Docker image
        run: |
          docker build -t ${{ vars.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }} .

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ vars.AWS_REGION }}
          role-to-assume: ${{ vars.OIDC_ROLE_ARN }}
          
      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ vars.AWS_REGION }} | docker login --username AWS --password-stdin ${{ vars.AWS_ACCOUNT }}.dkr.ecr.${{ vars.AWS_REGION }}.amazonaws.com
          docker push ${{ vars.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}

  PROD:
    name: Build docker image and push to ECR
    if: github.ref_name == 'prod'
    runs-on: ubuntu-latest
    environment: PROD
    env:
      IMAGE_TAG: ${{vars.LABEL}}-${GITHUB_SHA::7}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build Docker image
        run: |
          docker build -t ${{ vars.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }} .

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ vars.AWS_REGION }}
          role-to-assume: ${{ vars.OIDC_ROLE_ARN }}
          
      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ vars.AWS_REGION }} | docker login --username AWS --password-stdin ${{ vars.AWS_ACCOUNT }}.dkr.ecr.${{ vars.AWS_REGION }}.amazonaws.com
          docker push ${{ vars.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}